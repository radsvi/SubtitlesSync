<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:SubtitlesSync.Converters">
    <!--<Style TargetType="{x:Type CheckBox}" x:Key="DownloadListCheckbox">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Black"/>
        --><!--                           your color here --><!--
        <Setter Property="Foreground" Value="HotPink"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Background="{TemplateBinding Background}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Width="15" Height="15">
                            <Grid>
                                <Grid Background="{TemplateBinding Foreground}" Margin="1" Visibility="Collapsed" Name="nullBlock"/>
                                <Path Stretch="Uniform" Width="15" Height="10" Fill="{TemplateBinding Foreground}" Name="eliCheck" Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z " Visibility="Collapsed"/>
                            </Grid>
                        </Border>
                        <TextBlock Margin="5,0,0,0"  VerticalAlignment="Center" Foreground="Black" Text="{TemplateBinding Content}"></TextBlock>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#FF9C9E9F" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="LightGray" />
                            <Setter Property="Foreground" Value="Gray" />
                            <Setter Property="BorderBrush" Value="Gray"/>
                            <Setter TargetName="eliCheck" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="eliCheck" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="nullBlock" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <converter:IntToVisibilityConverter x:Key="IntToVisibility"/>
    <Style TargetType="DockPanel">
        <Setter Property="Margin" Value="0,5,0,5"/>
        <Setter Property="Height" Value="25"/>
        <Style.Resources>
            <Style TargetType="TextBox">
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style TargetType="Label">
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
        </Style.Resources>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Grid" x:Key="BrowseBox">
        <Setter Property="Height" Value="22" />
        <Style.Resources>
            <Style TargetType="TextBox">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
            </Style>
            <Style TargetType="Button">
                <Setter Property="HorizontalAlignment" Value="Right" />

            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>